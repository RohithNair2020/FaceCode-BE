// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  email    String     @unique
  name     String
  phone    String     @unique
  UserInfo UserInfo?
  Roommate Roommate[]
  Room     Room[]

  @@map("users")
}

model UserInfo {
  id       Int     @id @default(autoincrement())
  user     User    @relation(fields: [userId], references: [id])
  userId   Int     @unique
  resumeId String?

  @@map("user_info")
}

model Room {
  id          String     @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime   @default(now())
  lastActive  DateTime   @default(now())
  scheduledAt DateTime
  createdUser User       @relation(fields: [createdBy], references: [id])
  createdBy   Int
  Roommate    Roommate[]

  @@map("rooms")
}

model Roommate {
  id          String  @id @default(uuid())
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
  room        Room    @relation(fields: [roomId], references: [id])
  roomId      String
  isAdmin     Boolean @default(false)
  micAllowed  Boolean @default(true)
  camAllowed  Boolean @default(true)
  chatAllowed Boolean @default(true)
  codeAllowed Boolean @default(true)

  @@map("roommates")
}
